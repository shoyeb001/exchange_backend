version: "3.8"

services:
  mongo-auth:
    image: mongo:6
    container_name: mongo-auth
    restart: always
    ports:
      - "27018:27017"
    volumes:
      - mongo-auth-data:/data/db

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  auth:
    build: ./auth
    container_name: auth
    ports:
      - "3001:3001"
    depends_on:
      - mongo-auth
      - redis
    volumes:
      - ./auth:/app
      - /app/node_modules
    command: npm run dev

  # engine:
  #   build: ./engine
  #   container_name: engine
  #   ports:
  #     - "5001:5001"
  #   depends_on:
  #     - mongo-auth
  #     - redis
  #   volumes:
  #     - ./engine:/app
  #   command: npm run dev

  trade:
    build: ./trade
    container_name: trade
    ports:
      - "3002:3002"
    depends_on:
      - mongo-auth
      - redis
    volumes:
      - ./trade:/app
    command: npm run dev

  engine:
    build: ./engine
    container_name: engine
    depends_on:
      - mongo-auth
      - redis
      - trade
    volumes:
      - ./engine:/app
    command: npm run dev

  gateway:
    build: ./gateway
    container_name: gateway
    ports:
      - "3000:3000"
    depends_on:
      - auth
      - trade
    volumes:
      - ./gateway:/app
    command: npm run dev

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: tradeDb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  tradedb:
    build: ./tradeDb
    container_name: tradedb
    ports:
      - "3004:3004"
    depends_on:
      - postgres
      - redis
      - trade
      - engine
    volumes:
      - ./tradedb:/app
    command: npm run dev
volumes:
  mongo-auth-data:
  pgdata:
